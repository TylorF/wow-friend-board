{"version":3,"sources":["components/FriendCard/FriendCard.module.css","lib/Battlenet.js","lib/Utils.js","components/FriendCard/FriendCard.js","components/FriendList/FriendList.js","components/AppBar/AppBar.js","components/AppBar/BarTab.js","components/AppBar/index.js","components/Settings/CharactersMenu/CharactersMenu.js","components/Settings/SettingsMenu/SettingsMenu.js","App.js","registerServiceWorker.js","index.js","components/AppBar/AppBar.module.css"],"names":["module","exports","FriendCard","open","InfoHolder","MainDetails","ExpandedDetail","MediumCardImage","NameField","GuildField","DetailField","ErrorMessage","AzeriteItemList","AzeriteItemTitle","AzeriteItem","CircleIcon","ICON_SIZES","small","medium","large","lib_Battlenet","Battlenet","apiKey","_this","this","_classCallCheck","getCharacterData","region","realm","character","fields","preloadAuxData","arguments","length","undefined","axios_default","a","get","characterDataUrl","catch","e","console","log","then","resp","charData","data","Promise","all","loadCharacterSpells","_ref","spells","Battlenet_slicedToArray","getSpell","spellId","spellCache","resolve","spellDataUrl","localStorage","setItem","JSON","stringify","getSpells","spellIds","map","reduce","obj","spell","_objectSpread","_defineProperty","id","extractSpellIdsFromCharacter","deepExtractKeyValues","key","Array","val","filter","arr","concat","Object","entries","_ref2","_slicedToArray","k","v","characterImageUrl","thumbnailUrl","type","thumbnailKey","replace","fieldString","join","url","params","iconImageUrl","icon","size","sizeKey","parse","getItem","components_FriendCard_FriendCard","state","loaded","error","expanded","queryCharacterData","_this$props","props","battlenet","setState","emptyCharacter","name","items","averageItemLevel","titles","expandable","classString","FriendCard_module","toggleExpand","prev","enabledTitleStringOrBlank","find","t","selected","formatNameWithTitle","title","charImageUrlForState","_this$state","_this$state$character","thumbnail","errorMessage","message","status","response","_this$props2","charString","react_default","createElement","className","guildField","detailField","cardDetails","_this$state$character2","titleName","Fragment","guild","level","totalHonorableKills","achievementPoints","azeriteItems","azeriteEmpowered","values","item","azeriteEmpoweredItem","azeritePowers","azeriteItemDisplay","azeriteItem","src","alt","power","altHover","description","tier","prevProps","_this$state2","_this2","_this$state3","role","aria-expanded","tabIndex","style","backgroundImage","onClick","onKeyPress","react","FriendList","characters","char","AppBar_AppBar","tabs","selection","registerTab","tabName","prevState","childTabs","tab","getDropDownTabClass","onTabClick","tabClasses","AppBar_module","push","renderChildren","children","selectedIndex","child","ind","cloneElement","getDropDownClass","event","target","blur","indexOf","defaultProps","components_AppBar_AppBar","AppBar_BarTab","components_AppBar","Settings_CharactersMenu_CharactersMenu","existingCharacterList","characterString","deleteCharacter","charactersAddSubmit","preventDefault","onSaveCharacters","formData","FormData","newChar","newCharString","CharactersMenu_toConsumableArray","onSubmit","htmlFor","Settings_SettingsMenu_SettingsMenu","withApiExport","exportString","settings","output","SettingsMenu_objectSpread","settingsSaveSubmit","onSaveSettings","importSettingsSubmit","_this$props3","parsedImport","SettingsMenu_toConsumableArray","settingsForm","exportForm","onChange","checked","readOnly","value","importForm","src_App_0","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","call","App_objectSpread","App_toConsumableArray","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","react_dom_default","render","document","getElementById","URL","origin","addEventListener","fetch","headers","ready","unregister","reload","checkValidServiceWorker","AppBar","DropDown","Logo","DropDownTabHolder","DropDownTab","Active","DropDownContent"],"mappings":"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","file":"static/js/main.27610b26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendCard\":\"FriendCard_FriendCard__20M9P\",\"open\":\"FriendCard_open__3ZPGx\",\"InfoHolder\":\"FriendCard_InfoHolder__184Tw\",\"MainDetails\":\"FriendCard_MainDetails__2nl1k\",\"ExpandedDetail\":\"FriendCard_ExpandedDetail__2E6M6\",\"MediumCardImage\":\"FriendCard_MediumCardImage__2csba\",\"NameField\":\"FriendCard_NameField__kN1Qs\",\"GuildField\":\"FriendCard_GuildField__3Deg2\",\"DetailField\":\"FriendCard_DetailField__3o6_l\",\"ErrorMessage\":\"FriendCard_ErrorMessage__GvJgi\",\"AzeriteItemList\":\"FriendCard_AzeriteItemList__28Eoh\",\"AzeriteItemTitle\":\"FriendCard_AzeriteItemTitle__1VC7u\",\"AzeriteItem\":\"FriendCard_AzeriteItem__1icvV\",\"CircleIcon\":\"FriendCard_CircleIcon__2FExN\"};","import axios from 'axios';\nimport { deepExtractKeyValues } from './Utils';\n\nexport const ICON_SIZES = { small: 18, medium: 36, large: 56 };\n\n//\nclass Battlenet {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.spellCache = JSON.parse(localStorage.getItem('spellCache') || '{}');\n  }\n\n  getCharacterData = (\n    region,\n    realm,\n    character,\n    fields,\n    preloadAuxData = true\n  ) =>\n    axios\n      .get(this.characterDataUrl(this.apiKey, region, realm, character, fields))\n      .catch(e => {\n        // I want errors to go to the console always so we can investigate them\n        // eslint-disable-next-line no-console\n        console.log(e);\n        throw e;\n      })\n      .then(resp => {\n        const charData = resp.data;\n        if (!preloadAuxData) return { charData, spells: {} };\n\n        // Run the data preloaders\n        return Promise.all([this.loadCharacterSpells(charData)]).then(\n          ([spells]) => ({\n            charData,\n            spells\n          })\n        );\n      });\n\n  getSpell = spellId => {\n    if (this.spellCache[spellId]) {\n      return Promise.resolve(this.spellCache[spellId]);\n    }\n    return axios.get(this.spellDataUrl(this.apiKey, spellId)).then(resp => {\n      const { data } = resp;\n      this.spellCache[spellId] = data;\n      localStorage.setItem('spellCache', JSON.stringify(this.spellCache));\n      return data;\n    });\n  };\n\n  getSpells = spellIds =>\n    Promise.all(spellIds.map(spellId => this.getSpell(spellId))).then(spells =>\n      spells.reduce((obj, spell) => ({ ...obj, [spell.id]: spell }), {})\n    );\n\n  loadCharacterSpells = charData =>\n    this.getSpells(this.extractSpellIdsFromCharacter(charData));\n\n  extractSpellIdsFromCharacter = charData =>\n    deepExtractKeyValues(charData, 'spellId').filter(id => id > 0);\n\n  // Type is avatar, main, inset\n  // https://render-{region}.worldofwarcraft.com/character/{character.thumbnail}\n  characterImageUrl = (region, thumbnailUrl, type) => {\n    const prefix = 'https://render-';\n    const body = '.worldofwarcraft.com/character/';\n    const thumbnailKey = thumbnailUrl.replace('avatar.jpg', `${type}.jpg`);\n    return `${prefix}${region}${body}${thumbnailKey}?alt=/wow/static/images/2d/avatar/1-0.jpg`;\n  };\n\n  characterDataUrl = (apiKey, region, realm, character, fields = []) => {\n    const fieldString = `${\n      fields.length > 0 ? `&fields=${fields.join(',')}` : ''\n    }`;\n\n    const url = `https://${region}.api.battle.net/wow/character/${realm}/${character}`;\n    const params = `?locale=en_US&apikey=${apiKey}${fieldString}`;\n    return `${url}${params}`;\n  };\n\n  spellDataUrl = (apiKey, spellId) =>\n    `https://us.api.battle.net/wow/spell/${spellId}?locale=en_US&apikey=${apiKey}`;\n\n  // TODO: region\n  iconImageUrl = (icon, size = 'large') => {\n    const sizeKey = ICON_SIZES[size];\n    if (!icon || !sizeKey) return null; // TODO: Default icon/size\n    return `https://render-us.worldofwarcraft.com/icons/${sizeKey}/${icon}.jpg`;\n  };\n}\n\nexport default Battlenet;\n","// Utils for little CS algorithms and junk\n\n// Recursively extract all of the values from an object where the key is @key\n// returns an array of values, can take an array or object to search\n// eslint-disable-next-line import/prefer-default-export\nexport function deepExtractKeyValues(obj, key) {\n  if (obj === null || obj === undefined) return null;\n  if (obj instanceof Array)\n    return obj\n      .map(val => deepExtractKeyValues(val, key))\n      .filter(val => val !== null)\n      .reduce((arr, val) => arr.concat(val), []);\n  if (obj instanceof Object) {\n    return Object.entries(obj)\n      .map(([k, v]) => {\n        if (k === key) return v;\n        return deepExtractKeyValues(v, key);\n      })\n      .filter(val => val !== null)\n      .reduce((arr, val) => arr.concat(val), []);\n  }\n  return null;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as classes from './FriendCard.module.css';\nimport Battlenet, { ICON_SIZES } from '../../lib/Battlenet';\n\nclass FriendCard extends Component {\n  static propTypes = {\n    battlenet: PropTypes.instanceOf(Battlenet).isRequired,\n    region: PropTypes.string.isRequired,\n    realm: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired\n  };\n\n  state = {\n    loaded: false,\n    error: null,\n    expanded: false,\n    character: undefined,\n    spells: undefined\n  };\n\n  componentDidMount() {\n    this.queryCharacterData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { battlenet } = this.props;\n    const { loaded, error } = this.state;\n    if (battlenet !== prevProps.battlenet) this.queryCharacterData();\n    else if (!loaded && !error) this.queryCharacterData();\n  }\n\n  queryCharacterData = () => {\n    const { battlenet, region, realm, character } = this.props;\n    const fields = ['items', 'titles', 'progression', 'guild'];\n    battlenet\n      .getCharacterData(region, realm, character, fields)\n      .then(({ charData, spells }) => {\n        // I like the charatar data being available in the console for dev\n        // TODO: add to axios interceptor for dev mode\n        // eslint-disable-next-line no-console\n        console.log(charData, spells);\n        this.setState({\n          character: charData,\n          spells,\n          loaded: true,\n          error: null\n        });\n      })\n      .catch(e => {\n        // I want to see errors! TODO: add to axios interceptor for dev mode\n        // eslint-disable-next-line no-console\n        console.log(e);\n        this.setState({ loaded: false, error: e });\n      });\n  };\n\n  emptyCharacter = () => {\n    const { character } = this.props;\n    return {\n      name: `Loading ${character}...`,\n      items: { averageItemLevel: '...' },\n      titles: []\n    };\n  };\n\n  expandable = classString => {\n    const { expanded } = this.state;\n    if (expanded) return `${classString} ${classes.open}`;\n    return classString;\n  };\n\n  toggleExpand = () => {\n    this.setState(prev => ({ expanded: !prev.expanded }));\n  };\n\n  // Title format is \"title %s\" so blank is actually \"%s\"\n  enabledTitleStringOrBlank = titles =>\n    (titles.find(t => t.selected) || { name: '%s' }).name;\n\n  formatNameWithTitle = (title, name) => title.replace('%s', name);\n\n  charImageUrlForState = () => {\n    const { character = {}, expanded } = this.state;\n    const { battlenet } = this.props;\n    return battlenet.characterImageUrl(\n      character.region || 'us',\n      character.thumbnail || 'fallback',\n      expanded ? 'main' : 'inset'\n    );\n  };\n\n  errorMessage = error => {\n    const { response: status } = error;\n    const { region, realm, character } = this.props;\n    let message;\n    if (status === 404) {\n      const charString = `${region}/${realm}/${character}`;\n      message = <span>{`Character ${charString} does not exist :(`}</span>;\n    } else {\n      message = <span>An error has occurred...</span>;\n    }\n    return <div className={classes.ErrorMessage}>{message}</div>;\n  };\n\n  guildField = name => (\n    <div className={classes.GuildField}>\n      <span>{`<${name}>`}</span>\n    </div>\n  );\n\n  detailField = message => (\n    <div className={classes.DetailField}>\n      <span>{message}</span>\n    </div>\n  );\n\n  cardDetails = () => {\n    const { character = this.emptyCharacter() } = this.state;\n    const titleName = this.formatNameWithTitle(\n      this.enabledTitleStringOrBlank(character.titles),\n      character.name\n    );\n\n    return (\n      <React.Fragment>\n        <div className={classes.MainDetails}>\n          <div className={classes.NameField}>\n            <span>{titleName}</span>\n          </div>\n          {character.guild ? (\n            <div className={classes.GuildField}>\n              <span>{`<${character.guild.name}>`}</span>\n            </div>\n          ) : null}\n          <br />\n\n          {this.detailField(`LV: ${character.level}`)}\n          {this.detailField(`iLevel: ${character.items.averageItemLevel}`)}\n          {this.detailField(`HKs: ${character.totalHonorableKills}`)}\n          {this.detailField(\n            `Achievement Points: ${character.achievementPoints}`\n          )}\n        </div>\n\n        <div className={this.expandable(classes.ExpandedDetail)}>\n          {this.azeriteItems(character.items)}\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  azeriteItems = items => {\n    if (!items) return null;\n\n    const azeriteEmpowered = Object.values(items).filter(\n      item =>\n        item instanceof Object &&\n        item.azeriteEmpoweredItem &&\n        item.azeriteEmpoweredItem.azeritePowers.length > 0\n    );\n\n    return (\n      <div className={classes.AzeriteItemList}>\n        <span className={classes.AzeriteItemTitle}>Azerite Items</span>\n        {azeriteEmpowered.map(item => this.azeriteItemDisplay(item))}\n      </div>\n    );\n  };\n\n  azeriteItemDisplay = azeriteItem => {\n    const { spells } = this.state;\n    const { battlenet } = this.props;\n    return (\n      <div className={classes.AzeriteItem}>\n        <img\n          src={battlenet.iconImageUrl(azeriteItem.icon, 'large')}\n          alt={azeriteItem.name}\n          title={azeriteItem.name}\n          className={classes.CircleIcon}\n        />\n        {azeriteItem.azeriteEmpoweredItem.azeritePowers\n          .filter(power => power.id > 0)\n          .map(power => {\n            const spell = spells[power.spellId];\n            const altHover = `${spell.name} - ${spell.description} (Tier: ${\n              power.tier\n            })`;\n            return (\n              <img\n                src={battlenet.iconImageUrl(spell.icon, 'medium')}\n                alt={altHover}\n                title={altHover}\n                className={classes.CircleIcon}\n              />\n            );\n          })}\n      </div>\n    );\n  };\n\n  render() {\n    const { error, expanded } = this.state;\n\n    return (\n      <div className={this.expandable(classes.FriendCard)}>\n        <div\n          role=\"button\"\n          aria-expanded={expanded}\n          tabIndex=\"0\"\n          className={this.expandable(classes.MediumCardImage)}\n          style={{ backgroundImage: `url('${this.charImageUrlForState()}')` }}\n          onClick={() => this.toggleExpand()}\n          onKeyPress={e => {\n            if (e.key === 'Enter') this.toggleExpand();\n          }}\n        />\n        <div className={classes.InfoHolder}>\n          {error ? this.errorMessage(error) : this.cardDetails()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FriendCard;\n","import React from 'react';\n\nimport FriendCard from '../FriendCard/FriendCard';\n\nconst friendList = props =>\n  props.characters.map(char => (\n    <FriendCard\n      key={char.name}\n      battlenet={props.battlenet}\n      region={char.region}\n      realm={char.realm}\n      character={char.name}\n    />\n  ));\n\nexport default friendList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as classes from './AppBar.module.css';\n\nclass AppBar extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element)\n    ])\n  };\n\n  static defaultProps = {\n    children: []\n  };\n\n  state = {\n    tabs: [],\n    expanded: false,\n    selection: null\n  };\n\n  onTabClick(tabName, event) {\n    const { selection } = this.state;\n    if (tabName === selection) {\n      this.setState({ selection: null, expanded: false });\n      event.target.blur();\n    } else {\n      this.setState({ selection: tabName, expanded: true });\n    }\n  }\n\n  registerTab = tabName => {\n    this.setState(prevState => ({ tabs: [...prevState.tabs, tabName] }));\n  };\n\n  childTabs = () => {\n    const { tabs } = this.state;\n    return tabs.map(tab => (\n      <div\n        key={tab}\n        role=\"tab\"\n        tabIndex=\"0\"\n        className={this.getDropDownTabClass(tab)}\n        onClick={e => this.onTabClick(tab, e)}\n        onKeyPress={e => {\n          if (e.key === 'Enter') this.onTabClick(tab, e);\n        }}\n      >\n        {tab}\n      </div>\n    ));\n  };\n\n  getDropDownTabClass = tab => {\n    const { expanded, selection } = this.state;\n    const tabClasses = [classes.DropDownTab];\n    if (expanded && selection === tab) {\n      tabClasses.push(classes.Active);\n    }\n    return tabClasses.join(' ');\n  };\n\n  renderChildren = (children, selectedIndex) =>\n    children.map((child, ind) => {\n      const selected = ind === selectedIndex;\n      const style = selected\n        ? [classes.DropDownContent, classes.open]\n        : [classes.DropDownContent];\n      return (\n        <div className={style.join(' ')}>\n          {React.cloneElement(child, { registerTab: this.registerTab })}\n        </div>\n      );\n    });\n\n  getDropDownClass = () => {\n    const { expanded } = this.state;\n    if (expanded) return [classes.DropDown, classes.open].join(' ');\n    return classes.DropDown;\n  };\n\n  render() {\n    const { tabs, selection } = this.state;\n    const { children } = this.props;\n    return (\n      <React.Fragment>\n        <header className={classes.AppBar}>\n          <div className={classes.Logo}>WoW Friend Board</div>\n          <div className={classes.DropDownTabHolder} role=\"tablist\">\n            {this.childTabs()}\n          </div>\n        </header>\n        <div className={this.getDropDownClass()}>\n          {this.renderChildren(children, tabs.indexOf(selection))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AppBar;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// BarTab component for wrapping content for the AppBar\n// requires title prop, children, and is injected with\n// registerTab by the appBar on load\nclass BarTab extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOf([\n      PropTypes.arrayOf(PropTypes.element),\n      PropTypes.element\n    ]).isRequired,\n    registerTab: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { registerTab, title } = this.props;\n    registerTab(title);\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default BarTab;\n","import AppBar from './AppBar';\nimport BarTab from './BarTab';\n\nexport { BarTab };\nexport default AppBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CharactersMenu extends Component {\n  static propTypes = {\n    characters: PropTypes.arrayOf(\n      PropTypes.shape({\n        region: PropTypes.string.isRequired,\n        realm: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    onSaveCharacters: PropTypes.func.isRequired\n  };\n\n  existingCharacterList = () => {\n    const { characters } = this.props;\n    return characters.map(character => (\n      <div key={this.characterString(character)}>\n        <span\n          role=\"button\"\n          tabIndex=\"0\"\n          onClick={() => this.deleteCharacter(character)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') this.deleteCharacter(character);\n          }}\n        >\n          {`${this.characterString(character)} -- Delete`}\n        </span>\n        <br />\n      </div>\n    ));\n  };\n\n  charactersAddSubmit = event => {\n    event.preventDefault();\n    const { characters, onSaveCharacters } = this.props;\n    const formData = new FormData(event.target);\n    const newChar = {\n      region: formData.get('region'),\n      realm: formData.get('realm'),\n      name: formData.get('name')\n    };\n    const newCharString = this.characterString(newChar);\n    const existing = characters.find(\n      char => this.characterString(char) === newCharString\n    );\n    if (existing) {\n      return; // TODO: add messaging\n    }\n    onSaveCharacters([...characters, newChar]);\n  };\n\n  characterString = character =>\n    `${character.region}/${character.realm}/${character.name}`;\n\n  deleteCharacter = character => {\n    const { characters, onSaveCharacters } = this.props;\n    onSaveCharacters(characters.filter(char => char !== character));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.existingCharacterList()}\n        <form onSubmit={this.charactersAddSubmit}>\n          <label htmlFor=\"region\">\n            Region:\n            <input id=\"region\" type=\"text\" name=\"region\" />\n          </label>\n\n          <br />\n          <label htmlFor=\"realm\">\n            Realm:\n            <input id=\"realm\" type=\"text\" name=\"realm\" />\n          </label>\n\n          <br />\n          <label htmlFor=\"name\">\n            Character Name:\n            <input id=\"name\" type=\"text\" name=\"name\" />\n          </label>\n\n          <button type=\"submit\">Add</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CharactersMenu;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SettingsMenu extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({ apiKey: PropTypes.string }).isRequired,\n    characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSaveSettings: PropTypes.func.isRequired,\n    onSaveCharacters: PropTypes.func.isRequired\n  };\n\n  state = {\n    withApiExport: false\n  };\n\n  exportString = () => {\n    const { settings, characters } = this.props;\n    const { withApiExport } = this.state;\n    const output = {\n      settings: { ...settings },\n      characters\n    };\n    if (!withApiExport) {\n      delete output.settings;\n    }\n    return JSON.stringify(output);\n  };\n\n  settingsSaveSubmit = event => {\n    const { settings, onSaveSettings } = this.props;\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const apiKey = formData.get('apiKey');\n    const newSettings = {\n      ...settings,\n      apiKey\n    };\n    onSaveSettings(newSettings);\n  };\n\n  importSettingsSubmit = event => {\n    const {\n      settings,\n      characters,\n      onSaveSettings,\n      onSaveCharacters\n    } = this.props;\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const parsedImport = JSON.parse(formData.get('importData'));\n    if (parsedImport.settings) {\n      const newSettings = {\n        ...settings,\n        ...parsedImport.settings\n      };\n      onSaveSettings(newSettings);\n    }\n\n    if (parsedImport.characters) {\n      const newCharacters = [...characters, ...parsedImport.characters];\n      onSaveCharacters(newCharacters);\n    }\n  };\n\n  settingsForm = () => (\n    <form onSubmit={this.settingsSaveSubmit}>\n      <h4>Settings</h4>\n      <label htmlFor=\"apikey\">\n        Api Key:\n        <input id=\"apiKey\" type=\"text\" name=\"apiKey\" />\n      </label>\n\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n\n  exportForm = () => {\n    const exportString = this.exportString();\n    return (\n      <form>\n        <h4>Export Configuration</h4>\n        <input\n          type=\"checkbox\"\n          onChange={e => this.setState({ withApiExport: e.target.checked })}\n        />\n        <span>Include API Key</span>\n        <br />\n        {exportString ? <textarea readOnly value={exportString} /> : null}\n      </form>\n    );\n  };\n\n  importForm = () => (\n    <form onSubmit={this.importSettingsSubmit}>\n      <h4>Import Configuration</h4>\n      <textarea id=\"importData\" name=\"importData\" />\n      <button type=\"submit\">Import</button>\n    </form>\n  );\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.settingsForm()}\n        {this.exportForm()}\n        {this.importForm()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SettingsMenu;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Battlenet from './lib/Battlenet';\n\nimport FriendList from './components/FriendList/FriendList';\nimport AppBar, { BarTab } from './components/AppBar';\nimport { SettingsMenu, CharactersMenu } from './components/Settings';\n\nclass App extends Component {\n  constructor() {\n    super();\n    const settings = JSON.parse(localStorage.getItem('settings') || '{}');\n    const characters = JSON.parse(localStorage.getItem('characters') || '[]');\n\n    this.state = {\n      settings,\n      characters,\n      battlenet: new Battlenet(settings.apiKey)\n    };\n  }\n\n  onSaveSettings = settings => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    this.setState({\n      settings: { ...settings },\n      battlenet: new Battlenet(settings.apiKey)\n    });\n  };\n\n  onSaveCharacters = characters => {\n    localStorage.setItem('characters', JSON.stringify(characters));\n    this.setState({\n      characters: [...characters]\n    });\n  };\n\n  render() {\n    const { settings, characters, battlenet } = this.state;\n\n    return (\n      <div className=\"App\">\n        <AppBar>\n          <BarTab title=\"Settings\">\n            <SettingsMenu\n              settings={settings}\n              characters={characters}\n              onSaveSettings={this.onSaveSettings}\n              onSaveCharacters={this.onSaveCharacters}\n            />\n          </BarTab>\n          <BarTab title=\"Characters\">\n            <CharactersMenu\n              characters={characters}\n              onSaveCharacters={this.onSaveCharacters}\n            />\n          </BarTab>\n        </AppBar>\n        <FriendList battlenet={battlenet} characters={characters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__3eFER\",\"DropDown\":\"AppBar_DropDown__2CSlV\",\"open\":\"AppBar_open__1zElJ\",\"Logo\":\"AppBar_Logo__2bwKS\",\"DropDownTabHolder\":\"AppBar_DropDownTabHolder__-YNvH\",\"DropDownTab\":\"AppBar_DropDownTab__3EnnQ\",\"Active\":\"AppBar_Active__1g-W2\",\"DropDownContent\":\"AppBar_DropDownContent__3s2lL\"};"],"sourceRoot":""}